

================================================================
== Vivado HLS Report for 'Vadd_A_B'
================================================================
* Date:           Thu Jul 18 09:05:10 2019

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        prj
* Solution:       sol
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  24609|  24609|  24609|  24609|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------+------+------+----------+-----------+-----------+------+----------+
        |                                      |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |               Loop Name              |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------+------+------+----------+-----------+-----------+------+----------+
        |- memcpy.m00_axi_input_buffer.A       |  4097|  4097|         3|          1|          1|  4096|    yes   |
        |- Loop 2                              |  4096|  4096|         2|          1|          1|  4096|    yes   |
        |- memcpy.A.m00_axi_output_buffer.gep  |  4097|  4097|         3|          1|          1|  4096|    yes   |
        |- memcpy.m01_axi_input_buffer.B       |  4097|  4097|         3|          1|          1|  4096|    yes   |
        |- Loop 5                              |  4096|  4096|         2|          1|          1|  4096|    yes   |
        |- memcpy.B.m01_axi_output_buffer.gep  |  4097|  4097|         3|          1|          1|  4096|    yes   |
        +--------------------------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 3
  * Pipeline-3: initiation interval (II) = 1, depth = 3
  * Pipeline-4: initiation interval (II) = 1, depth = 2
  * Pipeline-5: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 40
* Pipeline : 6
  Pipeline-0 : II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1 : II = 1, D = 2, States = { 13 14 }
  Pipeline-2 : II = 1, D = 3, States = { 16 17 18 }
  Pipeline-3 : II = 1, D = 3, States = { 26 27 28 }
  Pipeline-4 : II = 1, D = 2, States = { 30 31 }
  Pipeline-5 : II = 1, D = 3, States = { 33 34 35 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 12 10 
10 --> 11 
11 --> 9 
12 --> 13 
13 --> 15 14 
14 --> 13 
15 --> 16 
16 --> 19 17 
17 --> 18 
18 --> 16 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 29 27 
27 --> 28 
28 --> 26 
29 --> 30 
30 --> 32 31 
31 --> 30 
32 --> 33 
33 --> 36 34 
34 --> 35 
35 --> 33 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 41 [1/1] (1.00ns)   --->   "%B_read = call i64 @_ssdm_op_Read.s_axilite.i64(i64 %B)"   --->   Operation 41 'read' 'B_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 42 [1/1] (1.00ns)   --->   "%A_read = call i64 @_ssdm_op_Read.s_axilite.i64(i64 %A)"   --->   Operation 42 'read' 'A_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%B3 = call i62 @_ssdm_op_PartSelect.i62.i64.i32.i32(i64 %B_read, i32 2, i32 63)"   --->   Operation 43 'partselect' 'B3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%empty = zext i62 %B3 to i64"   --->   Operation 44 'zext' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%m01_axi_addr = getelementptr i32* %m01_axi, i64 %empty"   --->   Operation 45 'getelementptr' 'm01_axi_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%A1 = call i62 @_ssdm_op_PartSelect.i62.i64.i32.i32(i64 %A_read, i32 2, i32 63)"   --->   Operation 46 'partselect' 'A1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%empty_6 = zext i62 %A1 to i64"   --->   Operation 47 'zext' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%m00_axi_addr = getelementptr i32* %m00_axi, i64 %empty_6"   --->   Operation 48 'getelementptr' 'm00_axi_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%m00_axi_input_buffer = alloca [8192 x i32], align 16" [../Vadd_A_B_cmodel.cpp:43]   --->   Operation 49 'alloca' 'm00_axi_input_buffer' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%m00_axi_output_buffer = alloca [8192 x i32], align 16" [../Vadd_A_B_cmodel.cpp:44]   --->   Operation 50 'alloca' 'm00_axi_output_buffer' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%m01_axi_input_buffer = alloca [8192 x i32], align 16" [../Vadd_A_B_cmodel.cpp:64]   --->   Operation 51 'alloca' 'm01_axi_input_buffer' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%m01_axi_output_buffer = alloca [8192 x i32], align 16" [../Vadd_A_B_cmodel.cpp:65]   --->   Operation 52 'alloca' 'm01_axi_output_buffer' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 53 [7/7] (8.75ns)   --->   "%m00_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m00_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 53 'readreq' 'm00_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 54 [6/7] (8.75ns)   --->   "%m00_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m00_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 54 'readreq' 'm00_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 55 [5/7] (8.75ns)   --->   "%m00_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m00_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 55 'readreq' 'm00_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 56 [4/7] (8.75ns)   --->   "%m00_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m00_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 56 'readreq' 'm00_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 57 [3/7] (8.75ns)   --->   "%m00_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m00_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 57 'readreq' 'm00_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 58 [2/7] (8.75ns)   --->   "%m00_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m00_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 58 'readreq' 'm00_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %m01_axi), !map !11"   --->   Operation 59 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %m00_axi), !map !17"   --->   Operation 60 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %scalar00) nounwind, !map !21"   --->   Operation 61 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @Vadd_A_B_str) nounwind"   --->   Operation 62 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %m00_axi, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../Vadd_A_B_cmodel.cpp:31]   --->   Operation 63 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %m01_axi, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str4, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../Vadd_A_B_cmodel.cpp:32]   --->   Operation 64 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %scalar00, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str6, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../Vadd_A_B_cmodel.cpp:33]   --->   Operation 65 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64 %A, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str6, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../Vadd_A_B_cmodel.cpp:34]   --->   Operation 66 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64 %B, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str6, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../Vadd_A_B_cmodel.cpp:35]   --->   Operation 67 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str6, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../Vadd_A_B_cmodel.cpp:36]   --->   Operation 68 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str7, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../Vadd_A_B_cmodel.cpp:37]   --->   Operation 69 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 70 [1/7] (8.75ns)   --->   "%m00_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m00_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 70 'readreq' 'm00_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 71 [1/1] (0.60ns)   --->   "br label %burst.rd.header" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.60>

State 9 <SV = 8> <Delay = 0.64>
ST_9 : Operation 72 [1/1] (0.00ns)   --->   "%phi_ln52 = phi i13 [ 0, %0 ], [ %add_ln52, %burstread.region ]" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 72 'phi' 'phi_ln52' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 73 [1/1] (0.64ns)   --->   "%icmp_ln52 = icmp eq i13 %phi_ln52, -4096" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 73 'icmp' 'icmp_ln52' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 74 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096) nounwind"   --->   Operation 74 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 75 [1/1] (0.54ns)   --->   "%add_ln52 = add i13 %phi_ln52, 1" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 75 'add' 'add_ln52' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 76 [1/1] (0.00ns)   --->   "br i1 %icmp_ln52, label %burst.rd.end.preheader, label %burstread.region" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 77 [1/1] (8.75ns)   --->   "%m00_axi_addr_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %m00_axi_addr)" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 77 'read' 'm00_axi_addr_read' <Predicate = (!icmp_ln52)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 1.15>
ST_11 : Operation 78 [1/1] (0.00ns)   --->   "%burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_str) nounwind" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 78 'specregionbegin' 'burstread_rbegin' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_11 : Operation 79 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str8) nounwind" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 79 'specpipeline' 'empty_8' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_11 : Operation 80 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopName([30 x i8]* @memcpy_OC_m00_axi_input_buffer_OC_A_str) nounwind" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 80 'specloopname' 'empty_9' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_11 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i13 %phi_ln52 to i64" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 81 'zext' 'zext_ln52' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_11 : Operation 82 [1/1] (0.00ns)   --->   "%m00_axi_input_buffer_addr = getelementptr [8192 x i32]* %m00_axi_input_buffer, i64 0, i64 %zext_ln52" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 82 'getelementptr' 'm00_axi_input_buffer_addr' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_11 : Operation 83 [1/1] (1.15ns)   --->   "store i32 %m00_axi_addr_read, i32* %m00_axi_input_buffer_addr, align 4" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 83 'store' <Predicate = (!icmp_ln52)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_11 : Operation 84 [1/1] (0.00ns)   --->   "%burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_str, i32 %burstread_rbegin) nounwind" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 84 'specregionend' 'burstread_rend' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_11 : Operation 85 [1/1] (0.00ns)   --->   "br label %burst.rd.header" [../Vadd_A_B_cmodel.cpp:52]   --->   Operation 85 'br' <Predicate = (!icmp_ln52)> <Delay = 0.00>

State 12 <SV = 9> <Delay = 0.60>
ST_12 : Operation 86 [1/1] (0.60ns)   --->   "br label %burst.rd.end"   --->   Operation 86 'br' <Predicate = true> <Delay = 0.60>

State 13 <SV = 10> <Delay = 1.15>
ST_13 : Operation 87 [1/1] (0.00ns)   --->   "%i_0 = phi i13 [ %i, %1 ], [ 0, %burst.rd.end.preheader ]"   --->   Operation 87 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 88 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str12) nounwind"   --->   Operation 88 'specpipeline' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 89 [1/1] (0.64ns)   --->   "%icmp_ln55 = icmp eq i13 %i_0, -4096" [../Vadd_A_B_cmodel.cpp:55]   --->   Operation 89 'icmp' 'icmp_ln55' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 90 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096) nounwind"   --->   Operation 90 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 91 [1/1] (0.54ns)   --->   "%i = add i13 %i_0, 1" [../Vadd_A_B_cmodel.cpp:55]   --->   Operation 91 'add' 'i' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 92 [1/1] (0.00ns)   --->   "br i1 %icmp_ln55, label %burst.wr.header.preheader, label %1" [../Vadd_A_B_cmodel.cpp:55]   --->   Operation 92 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln56 = zext i13 %i_0 to i64" [../Vadd_A_B_cmodel.cpp:56]   --->   Operation 93 'zext' 'zext_ln56' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_13 : Operation 94 [1/1] (0.00ns)   --->   "%m00_axi_input_buffer_addr_1 = getelementptr inbounds [8192 x i32]* %m00_axi_input_buffer, i64 0, i64 %zext_ln56" [../Vadd_A_B_cmodel.cpp:56]   --->   Operation 94 'getelementptr' 'm00_axi_input_buffer_addr_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_13 : Operation 95 [2/2] (1.15ns)   --->   "%m00_axi_input_buffer_load = load i32* %m00_axi_input_buffer_addr_1, align 4" [../Vadd_A_B_cmodel.cpp:56]   --->   Operation 95 'load' 'm00_axi_input_buffer_load' <Predicate = (!icmp_ln55)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>

State 14 <SV = 11> <Delay = 2.98>
ST_14 : Operation 96 [1/2] (1.15ns)   --->   "%m00_axi_input_buffer_load = load i32* %m00_axi_input_buffer_addr_1, align 4" [../Vadd_A_B_cmodel.cpp:56]   --->   Operation 96 'load' 'm00_axi_input_buffer_load' <Predicate = (!icmp_ln55)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_14 : Operation 97 [1/1] (0.66ns)   --->   "%add_ln56 = add nsw i32 %m00_axi_input_buffer_load, 1" [../Vadd_A_B_cmodel.cpp:56]   --->   Operation 97 'add' 'add_ln56' <Predicate = (!icmp_ln55)> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 98 [1/1] (0.00ns)   --->   "%m00_axi_output_buffer_addr = getelementptr inbounds [8192 x i32]* %m00_axi_output_buffer, i64 0, i64 %zext_ln56" [../Vadd_A_B_cmodel.cpp:56]   --->   Operation 98 'getelementptr' 'm00_axi_output_buffer_addr' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_14 : Operation 99 [1/1] (1.15ns)   --->   "store i32 %add_ln56, i32* %m00_axi_output_buffer_addr, align 4" [../Vadd_A_B_cmodel.cpp:56]   --->   Operation 99 'store' <Predicate = (!icmp_ln55)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_14 : Operation 100 [1/1] (0.00ns)   --->   "br label %burst.rd.end" [../Vadd_A_B_cmodel.cpp:55]   --->   Operation 100 'br' <Predicate = (!icmp_ln55)> <Delay = 0.00>

State 15 <SV = 11> <Delay = 8.75>
ST_15 : Operation 101 [1/1] (8.75ns)   --->   "%m00_axi_addr_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m00_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 101 'writereq' 'm00_axi_addr_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 102 [1/1] (0.60ns)   --->   "br label %burst.wr.header" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 102 'br' <Predicate = true> <Delay = 0.60>

State 16 <SV = 12> <Delay = 1.15>
ST_16 : Operation 103 [1/1] (0.00ns)   --->   "%phi_ln60 = phi i13 [ %add_ln60, %burstwrite.region ], [ 0, %burst.wr.header.preheader ]" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 103 'phi' 'phi_ln60' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 104 [1/1] (0.64ns)   --->   "%icmp_ln60 = icmp eq i13 %phi_ln60, -4096" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 104 'icmp' 'icmp_ln60' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 105 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096) nounwind"   --->   Operation 105 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 106 [1/1] (0.54ns)   --->   "%add_ln60 = add i13 %phi_ln60, 1" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 106 'add' 'add_ln60' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 107 [1/1] (0.00ns)   --->   "br i1 %icmp_ln60, label %burst.rd.header21.preheader, label %burstwrite.region" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 107 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i13 %phi_ln60 to i64" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 108 'zext' 'zext_ln60' <Predicate = (!icmp_ln60)> <Delay = 0.00>
ST_16 : Operation 109 [1/1] (0.00ns)   --->   "%m00_axi_output_buffer_addr_1 = getelementptr [8192 x i32]* %m00_axi_output_buffer, i64 0, i64 %zext_ln60" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 109 'getelementptr' 'm00_axi_output_buffer_addr_1' <Predicate = (!icmp_ln60)> <Delay = 0.00>
ST_16 : Operation 110 [2/2] (1.15ns)   --->   "%m00_axi_output_buffer_load = load i32* %m00_axi_output_buffer_addr_1, align 4" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 110 'load' 'm00_axi_output_buffer_load' <Predicate = (!icmp_ln60)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>

State 17 <SV = 13> <Delay = 1.15>
ST_17 : Operation 111 [1/2] (1.15ns)   --->   "%m00_axi_output_buffer_load = load i32* %m00_axi_output_buffer_addr_1, align 4" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 111 'load' 'm00_axi_output_buffer_load' <Predicate = (!icmp_ln60)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>

State 18 <SV = 14> <Delay = 8.75>
ST_18 : Operation 112 [1/1] (0.00ns)   --->   "%burstwrite_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region_str) nounwind" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 112 'specregionbegin' 'burstwrite_rbegin' <Predicate = (!icmp_ln60)> <Delay = 0.00>
ST_18 : Operation 113 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str9) nounwind" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 113 'specpipeline' 'empty_13' <Predicate = (!icmp_ln60)> <Delay = 0.00>
ST_18 : Operation 114 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecLoopName([35 x i8]* @memcpy_OC_A_OC_m00_axi_output_buffer_OC_gep_str) nounwind" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 114 'specloopname' 'empty_14' <Predicate = (!icmp_ln60)> <Delay = 0.00>
ST_18 : Operation 115 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %m00_axi_addr, i32 %m00_axi_output_buffer_load, i4 -1)" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 115 'write' <Predicate = (!icmp_ln60)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 116 [1/1] (0.00ns)   --->   "%burstwrite_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region_str, i32 %burstwrite_rbegin) nounwind" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 116 'specregionend' 'burstwrite_rend' <Predicate = (!icmp_ln60)> <Delay = 0.00>
ST_18 : Operation 117 [1/1] (0.00ns)   --->   "br label %burst.wr.header" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 117 'br' <Predicate = (!icmp_ln60)> <Delay = 0.00>

State 19 <SV = 13> <Delay = 8.75>
ST_19 : Operation 118 [7/7] (8.75ns)   --->   "%m01_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m01_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 118 'readreq' 'm01_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 14> <Delay = 8.75>
ST_20 : Operation 119 [5/5] (8.75ns)   --->   "%m00_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m00_axi_addr)" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 119 'writeresp' 'm00_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 120 [6/7] (8.75ns)   --->   "%m01_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m01_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 120 'readreq' 'm01_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 15> <Delay = 8.75>
ST_21 : Operation 121 [4/5] (8.75ns)   --->   "%m00_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m00_axi_addr)" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 121 'writeresp' 'm00_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 122 [5/7] (8.75ns)   --->   "%m01_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m01_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 122 'readreq' 'm01_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 16> <Delay = 8.75>
ST_22 : Operation 123 [3/5] (8.75ns)   --->   "%m00_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m00_axi_addr)" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 123 'writeresp' 'm00_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 124 [4/7] (8.75ns)   --->   "%m01_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m01_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 124 'readreq' 'm01_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 17> <Delay = 8.75>
ST_23 : Operation 125 [2/5] (8.75ns)   --->   "%m00_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m00_axi_addr)" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 125 'writeresp' 'm00_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 126 [3/7] (8.75ns)   --->   "%m01_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m01_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 126 'readreq' 'm01_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 18> <Delay = 8.75>
ST_24 : Operation 127 [1/5] (8.75ns)   --->   "%m00_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m00_axi_addr)" [../Vadd_A_B_cmodel.cpp:60]   --->   Operation 127 'writeresp' 'm00_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 128 [2/7] (8.75ns)   --->   "%m01_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m01_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 128 'readreq' 'm01_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 19> <Delay = 8.75>
ST_25 : Operation 129 [1/7] (8.75ns)   --->   "%m01_axi_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m01_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 129 'readreq' 'm01_axi_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 130 [1/1] (0.60ns)   --->   "br label %burst.rd.header21" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 130 'br' <Predicate = true> <Delay = 0.60>

State 26 <SV = 20> <Delay = 0.64>
ST_26 : Operation 131 [1/1] (0.00ns)   --->   "%phi_ln73 = phi i13 [ %add_ln73, %burstread.region1 ], [ 0, %burst.rd.header21.preheader ]" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 131 'phi' 'phi_ln73' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 132 [1/1] (0.64ns)   --->   "%icmp_ln73 = icmp eq i13 %phi_ln73, -4096" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 132 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 133 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096) nounwind"   --->   Operation 133 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 134 [1/1] (0.54ns)   --->   "%add_ln73 = add i13 %phi_ln73, 1" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 134 'add' 'add_ln73' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 135 [1/1] (0.00ns)   --->   "br i1 %icmp_ln73, label %burst.rd.end20.preheader, label %burstread.region1" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 135 'br' <Predicate = true> <Delay = 0.00>

State 27 <SV = 21> <Delay = 8.75>
ST_27 : Operation 136 [1/1] (8.75ns)   --->   "%m01_axi_addr_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %m01_axi_addr)" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 136 'read' 'm01_axi_addr_read' <Predicate = (!icmp_ln73)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 22> <Delay = 1.15>
ST_28 : Operation 137 [1/1] (0.00ns)   --->   "%burstread_rbegin1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_str) nounwind" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 137 'specregionbegin' 'burstread_rbegin1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_28 : Operation 138 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str10) nounwind" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 138 'specpipeline' 'empty_16' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_28 : Operation 139 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecLoopName([30 x i8]* @memcpy_OC_m01_axi_input_buffer_OC_B_str) nounwind" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 139 'specloopname' 'empty_17' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_28 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i13 %phi_ln73 to i64" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 140 'zext' 'zext_ln73' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_28 : Operation 141 [1/1] (0.00ns)   --->   "%m01_axi_input_buffer_addr = getelementptr [8192 x i32]* %m01_axi_input_buffer, i64 0, i64 %zext_ln73" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 141 'getelementptr' 'm01_axi_input_buffer_addr' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_28 : Operation 142 [1/1] (1.15ns)   --->   "store i32 %m01_axi_addr_read, i32* %m01_axi_input_buffer_addr, align 4" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 142 'store' <Predicate = (!icmp_ln73)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_28 : Operation 143 [1/1] (0.00ns)   --->   "%burstread_rend30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_str, i32 %burstread_rbegin1) nounwind" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 143 'specregionend' 'burstread_rend30' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_28 : Operation 144 [1/1] (0.00ns)   --->   "br label %burst.rd.header21" [../Vadd_A_B_cmodel.cpp:73]   --->   Operation 144 'br' <Predicate = (!icmp_ln73)> <Delay = 0.00>

State 29 <SV = 21> <Delay = 0.60>
ST_29 : Operation 145 [1/1] (0.60ns)   --->   "br label %burst.rd.end20"   --->   Operation 145 'br' <Predicate = true> <Delay = 0.60>

State 30 <SV = 22> <Delay = 1.15>
ST_30 : Operation 146 [1/1] (0.00ns)   --->   "%i1_0 = phi i13 [ %i_1, %2 ], [ 0, %burst.rd.end20.preheader ]"   --->   Operation 146 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 147 [1/1] (0.00ns)   --->   "%empty_18 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str13) nounwind"   --->   Operation 147 'specpipeline' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 148 [1/1] (0.64ns)   --->   "%icmp_ln76 = icmp eq i13 %i1_0, -4096" [../Vadd_A_B_cmodel.cpp:76]   --->   Operation 148 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 149 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096) nounwind"   --->   Operation 149 'speclooptripcount' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 150 [1/1] (0.54ns)   --->   "%i_1 = add i13 %i1_0, 1" [../Vadd_A_B_cmodel.cpp:76]   --->   Operation 150 'add' 'i_1' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 151 [1/1] (0.00ns)   --->   "br i1 %icmp_ln76, label %burst.wr.header33.preheader, label %2" [../Vadd_A_B_cmodel.cpp:76]   --->   Operation 151 'br' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i13 %i1_0 to i64" [../Vadd_A_B_cmodel.cpp:77]   --->   Operation 152 'zext' 'zext_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_30 : Operation 153 [1/1] (0.00ns)   --->   "%m01_axi_input_buffer_addr_1 = getelementptr inbounds [8192 x i32]* %m01_axi_input_buffer, i64 0, i64 %zext_ln77" [../Vadd_A_B_cmodel.cpp:77]   --->   Operation 153 'getelementptr' 'm01_axi_input_buffer_addr_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_30 : Operation 154 [2/2] (1.15ns)   --->   "%m01_axi_input_buffer_load = load i32* %m01_axi_input_buffer_addr_1, align 4" [../Vadd_A_B_cmodel.cpp:77]   --->   Operation 154 'load' 'm01_axi_input_buffer_load' <Predicate = (!icmp_ln76)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>

State 31 <SV = 23> <Delay = 2.98>
ST_31 : Operation 155 [1/2] (1.15ns)   --->   "%m01_axi_input_buffer_load = load i32* %m01_axi_input_buffer_addr_1, align 4" [../Vadd_A_B_cmodel.cpp:77]   --->   Operation 155 'load' 'm01_axi_input_buffer_load' <Predicate = (!icmp_ln76)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_31 : Operation 156 [1/1] (0.66ns)   --->   "%add_ln77 = add nsw i32 %m01_axi_input_buffer_load, 1" [../Vadd_A_B_cmodel.cpp:77]   --->   Operation 156 'add' 'add_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 157 [1/1] (0.00ns)   --->   "%m01_axi_output_buffer_addr = getelementptr inbounds [8192 x i32]* %m01_axi_output_buffer, i64 0, i64 %zext_ln77" [../Vadd_A_B_cmodel.cpp:77]   --->   Operation 157 'getelementptr' 'm01_axi_output_buffer_addr' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_31 : Operation 158 [1/1] (1.15ns)   --->   "store i32 %add_ln77, i32* %m01_axi_output_buffer_addr, align 4" [../Vadd_A_B_cmodel.cpp:77]   --->   Operation 158 'store' <Predicate = (!icmp_ln76)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>
ST_31 : Operation 159 [1/1] (0.00ns)   --->   "br label %burst.rd.end20" [../Vadd_A_B_cmodel.cpp:76]   --->   Operation 159 'br' <Predicate = (!icmp_ln76)> <Delay = 0.00>

State 32 <SV = 23> <Delay = 8.75>
ST_32 : Operation 160 [1/1] (8.75ns)   --->   "%m01_axi_addr_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m01_axi_addr, i32 4096)" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 160 'writereq' 'm01_axi_addr_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 161 [1/1] (0.60ns)   --->   "br label %burst.wr.header33" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 161 'br' <Predicate = true> <Delay = 0.60>

State 33 <SV = 24> <Delay = 1.15>
ST_33 : Operation 162 [1/1] (0.00ns)   --->   "%phi_ln81 = phi i13 [ %add_ln81, %burstwrite.region1 ], [ 0, %burst.wr.header33.preheader ]" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 162 'phi' 'phi_ln81' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 163 [1/1] (0.64ns)   --->   "%icmp_ln81 = icmp eq i13 %phi_ln81, -4096" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 163 'icmp' 'icmp_ln81' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 164 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096) nounwind"   --->   Operation 164 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 165 [1/1] (0.54ns)   --->   "%add_ln81 = add i13 %phi_ln81, 1" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 165 'add' 'add_ln81' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 166 [1/1] (0.00ns)   --->   "br i1 %icmp_ln81, label %memcpy.tail46, label %burstwrite.region1" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 166 'br' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 167 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i13 %phi_ln81 to i64" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 167 'zext' 'zext_ln81' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_33 : Operation 168 [1/1] (0.00ns)   --->   "%m01_axi_output_buffer_addr_1 = getelementptr [8192 x i32]* %m01_axi_output_buffer, i64 0, i64 %zext_ln81" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 168 'getelementptr' 'm01_axi_output_buffer_addr_1' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_33 : Operation 169 [2/2] (1.15ns)   --->   "%m01_axi_output_buffer_load = load i32* %m01_axi_output_buffer_addr_1, align 4" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 169 'load' 'm01_axi_output_buffer_load' <Predicate = (!icmp_ln81)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>

State 34 <SV = 25> <Delay = 1.15>
ST_34 : Operation 170 [1/2] (1.15ns)   --->   "%m01_axi_output_buffer_load = load i32* %m01_axi_output_buffer_addr_1, align 4" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 170 'load' 'm01_axi_output_buffer_load' <Predicate = (!icmp_ln81)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8192> <RAM>

State 35 <SV = 26> <Delay = 8.75>
ST_35 : Operation 171 [1/1] (0.00ns)   --->   "%burstwrite_rbegin1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region_str) nounwind" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 171 'specregionbegin' 'burstwrite_rbegin1' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_35 : Operation 172 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str11) nounwind" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 172 'specpipeline' 'empty_21' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_35 : Operation 173 [1/1] (0.00ns)   --->   "%empty_22 = call i32 (...)* @_ssdm_op_SpecLoopName([35 x i8]* @memcpy_OC_B_OC_m01_axi_output_buffer_OC_gep_str) nounwind" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 173 'specloopname' 'empty_22' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_35 : Operation 174 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %m01_axi_addr, i32 %m01_axi_output_buffer_load, i4 -1)" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 174 'write' <Predicate = (!icmp_ln81)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 175 [1/1] (0.00ns)   --->   "%burstwrite_rend45 = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region_str, i32 %burstwrite_rbegin1) nounwind" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 175 'specregionend' 'burstwrite_rend45' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_35 : Operation 176 [1/1] (0.00ns)   --->   "br label %burst.wr.header33" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 176 'br' <Predicate = (!icmp_ln81)> <Delay = 0.00>

State 36 <SV = 25> <Delay = 8.75>
ST_36 : Operation 177 [5/5] (8.75ns)   --->   "%m01_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m01_axi_addr)" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 177 'writeresp' 'm01_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 26> <Delay = 8.75>
ST_37 : Operation 178 [4/5] (8.75ns)   --->   "%m01_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m01_axi_addr)" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 178 'writeresp' 'm01_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 27> <Delay = 8.75>
ST_38 : Operation 179 [3/5] (8.75ns)   --->   "%m01_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m01_axi_addr)" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 179 'writeresp' 'm01_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 28> <Delay = 8.75>
ST_39 : Operation 180 [2/5] (8.75ns)   --->   "%m01_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m01_axi_addr)" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 180 'writeresp' 'm01_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 29> <Delay = 8.75>
ST_40 : Operation 181 [1/5] (8.75ns)   --->   "%m01_axi_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m01_axi_addr)" [../Vadd_A_B_cmodel.cpp:81]   --->   Operation 181 'writeresp' 'm01_axi_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 182 [1/1] (0.00ns)   --->   "ret void" [../Vadd_A_B_cmodel.cpp:84]   --->   Operation 182 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'B' [6]  (1 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus request on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:52) [29]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:52) [29]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:52) [29]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:52) [29]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:52) [29]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:52) [29]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:52) [29]  (8.75 ns)

 <State 9>: 0.64ns
The critical path consists of the following:
	'phi' operation ('phi_ln52', ../Vadd_A_B_cmodel.cpp:52) with incoming values : ('add_ln52', ../Vadd_A_B_cmodel.cpp:52) [32]  (0 ns)
	'icmp' operation ('icmp_ln52', ../Vadd_A_B_cmodel.cpp:52) [33]  (0.64 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:52) [42]  (8.75 ns)

 <State 11>: 1.16ns
The critical path consists of the following:
	'getelementptr' operation ('m00_axi_input_buffer_addr', ../Vadd_A_B_cmodel.cpp:52) [43]  (0 ns)
	'store' operation ('store_ln52', ../Vadd_A_B_cmodel.cpp:52) of variable 'm00_axi_addr_read', ../Vadd_A_B_cmodel.cpp:52 on array 'm00_axi_input_buffer', ../Vadd_A_B_cmodel.cpp:43 [44]  (1.16 ns)

 <State 12>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ../Vadd_A_B_cmodel.cpp:55) [50]  (0.603 ns)

 <State 13>: 1.16ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ../Vadd_A_B_cmodel.cpp:55) [50]  (0 ns)
	'getelementptr' operation ('m00_axi_input_buffer_addr_1', ../Vadd_A_B_cmodel.cpp:56) [58]  (0 ns)
	'load' operation ('m00_axi_input_buffer_load', ../Vadd_A_B_cmodel.cpp:56) on array 'm00_axi_input_buffer', ../Vadd_A_B_cmodel.cpp:43 [59]  (1.16 ns)

 <State 14>: 2.98ns
The critical path consists of the following:
	'load' operation ('m00_axi_input_buffer_load', ../Vadd_A_B_cmodel.cpp:56) on array 'm00_axi_input_buffer', ../Vadd_A_B_cmodel.cpp:43 [59]  (1.16 ns)
	'add' operation ('add_ln56', ../Vadd_A_B_cmodel.cpp:56) [60]  (0.669 ns)
	'store' operation ('store_ln56', ../Vadd_A_B_cmodel.cpp:56) of variable 'add_ln56', ../Vadd_A_B_cmodel.cpp:56 on array 'm00_axi_output_buffer', ../Vadd_A_B_cmodel.cpp:44 [62]  (1.16 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:60) [65]  (8.75 ns)

 <State 16>: 1.16ns
The critical path consists of the following:
	'phi' operation ('phi_ln60', ../Vadd_A_B_cmodel.cpp:60) with incoming values : ('add_ln60', ../Vadd_A_B_cmodel.cpp:60) [68]  (0 ns)
	'getelementptr' operation ('m00_axi_output_buffer_addr_1', ../Vadd_A_B_cmodel.cpp:60) [78]  (0 ns)
	'load' operation ('m00_axi_output_buffer_load', ../Vadd_A_B_cmodel.cpp:60) on array 'm00_axi_output_buffer', ../Vadd_A_B_cmodel.cpp:44 [79]  (1.16 ns)

 <State 17>: 1.16ns
The critical path consists of the following:
	'load' operation ('m00_axi_output_buffer_load', ../Vadd_A_B_cmodel.cpp:60) on array 'm00_axi_output_buffer', ../Vadd_A_B_cmodel.cpp:44 [79]  (1.16 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus write on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:60) [80]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:73) [85]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus access on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:60) [84]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus access on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:60) [84]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus access on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:60) [84]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus access on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:60) [84]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus access on port 'm00_axi' (../Vadd_A_B_cmodel.cpp:60) [84]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus request on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:73) [85]  (8.75 ns)

 <State 26>: 0.64ns
The critical path consists of the following:
	'phi' operation ('phi_ln73', ../Vadd_A_B_cmodel.cpp:73) with incoming values : ('add_ln73', ../Vadd_A_B_cmodel.cpp:73) [88]  (0 ns)
	'icmp' operation ('icmp_ln73', ../Vadd_A_B_cmodel.cpp:73) [89]  (0.64 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus read on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:73) [98]  (8.75 ns)

 <State 28>: 1.16ns
The critical path consists of the following:
	'getelementptr' operation ('m01_axi_input_buffer_addr', ../Vadd_A_B_cmodel.cpp:73) [99]  (0 ns)
	'store' operation ('store_ln73', ../Vadd_A_B_cmodel.cpp:73) of variable 'm01_axi_addr_read', ../Vadd_A_B_cmodel.cpp:73 on array 'm01_axi_input_buffer', ../Vadd_A_B_cmodel.cpp:64 [100]  (1.16 ns)

 <State 29>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ../Vadd_A_B_cmodel.cpp:76) [106]  (0.603 ns)

 <State 30>: 1.16ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ../Vadd_A_B_cmodel.cpp:76) [106]  (0 ns)
	'getelementptr' operation ('m01_axi_input_buffer_addr_1', ../Vadd_A_B_cmodel.cpp:77) [114]  (0 ns)
	'load' operation ('m01_axi_input_buffer_load', ../Vadd_A_B_cmodel.cpp:77) on array 'm01_axi_input_buffer', ../Vadd_A_B_cmodel.cpp:64 [115]  (1.16 ns)

 <State 31>: 2.98ns
The critical path consists of the following:
	'load' operation ('m01_axi_input_buffer_load', ../Vadd_A_B_cmodel.cpp:77) on array 'm01_axi_input_buffer', ../Vadd_A_B_cmodel.cpp:64 [115]  (1.16 ns)
	'add' operation ('add_ln77', ../Vadd_A_B_cmodel.cpp:77) [116]  (0.669 ns)
	'store' operation ('store_ln77', ../Vadd_A_B_cmodel.cpp:77) of variable 'add_ln77', ../Vadd_A_B_cmodel.cpp:77 on array 'm01_axi_output_buffer', ../Vadd_A_B_cmodel.cpp:65 [118]  (1.16 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus request on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:81) [121]  (8.75 ns)

 <State 33>: 1.16ns
The critical path consists of the following:
	'phi' operation ('phi_ln81', ../Vadd_A_B_cmodel.cpp:81) with incoming values : ('add_ln81', ../Vadd_A_B_cmodel.cpp:81) [124]  (0 ns)
	'getelementptr' operation ('m01_axi_output_buffer_addr_1', ../Vadd_A_B_cmodel.cpp:81) [134]  (0 ns)
	'load' operation ('m01_axi_output_buffer_load', ../Vadd_A_B_cmodel.cpp:81) on array 'm01_axi_output_buffer', ../Vadd_A_B_cmodel.cpp:65 [135]  (1.16 ns)

 <State 34>: 1.16ns
The critical path consists of the following:
	'load' operation ('m01_axi_output_buffer_load', ../Vadd_A_B_cmodel.cpp:81) on array 'm01_axi_output_buffer', ../Vadd_A_B_cmodel.cpp:65 [135]  (1.16 ns)

 <State 35>: 8.75ns
The critical path consists of the following:
	bus write on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:81) [136]  (8.75 ns)

 <State 36>: 8.75ns
The critical path consists of the following:
	bus access on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:81) [140]  (8.75 ns)

 <State 37>: 8.75ns
The critical path consists of the following:
	bus access on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:81) [140]  (8.75 ns)

 <State 38>: 8.75ns
The critical path consists of the following:
	bus access on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:81) [140]  (8.75 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	bus access on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:81) [140]  (8.75 ns)

 <State 40>: 8.75ns
The critical path consists of the following:
	bus access on port 'm01_axi' (../Vadd_A_B_cmodel.cpp:81) [140]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
